# This workflow will build the package, manually triggered

name: Package


# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "package"
  package:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      # Get version from properties file
      - name: Read version from Properties file
        run: |
          echo "VERSION=`${{cat publish.properties | grep "VERSION" | cut -d'=' -f2}}`" >> $GITHUB_ENV

      # Create a full version number with the Run Number suffix
      - name: Set full version number
        run: |
          echo "PACKAGEVERSION=`echo ${{ env.VERSION }}.${{ github.run_number }}`" >> $GITHUB_ENV

      # Update install xml with package version
      - name: Create install XML file
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: install.template.xml
          output_file: TVH/install.xml
          strict: true

      - name: Remove existing zip
        run: |
          git config --global user.name 'robot-codechimp'
          git config --global user.email 'robot@codechimp.org'
          git rm docs/*.zip
          git commit -m "Remove old zip"

      # Copy plugin and create ZIP
      - name: Create zip and move to docs
        run:  zip -r tvh-${{ env.PACKAGEVERSION }}.zip TVH/*; rm -f docs/*.zip; mv tvh*.zip docs
     
      # Calculate sha1 of zip    
      - name: Calculate SHA
        run: |
          echo "SHA=$(shasum docs/tvh-${{ env.PACKAGEVERSION }}.zip | awk '{print $1;}')" >> $GITHUB_ENV

      # Update repo xml with new filename/version and sha
      - name: Create release public XML file
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: repo.template.xml
          output_file: docs/repo.xml
          strict: true

      - name: Commit files
        run: |
          git config --global user.name 'robot-codechimp'
          git config --global user.email 'robot@codechimp.org'
          git add docs/*
          git commit -am "Add new version"
          git tag ${{ env.PACKAGEVERSION }}
          git push --tags
